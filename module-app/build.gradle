plugins{
    id 'com.android.application'
    id 'com.novoda.build-properties'
}

buildProperties {
    getPublic {
        file rootProject.file('public.properties')
    }
    getLocal {
        file rootProject.file('local.properties')
    }
}

android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion Config.buildToolsVersion
    defaultConfig {
        applicationId Config.applicationId
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled false

        buildConfigField "String", "OPENHUB_CLIENT_ID", (buildProperties.getLocal['openhub_client_id'] | buildProperties.getPublic['openhub_client_id']).string
        buildConfigField "String", "OPENHUB_CLIENT_SECRET", (buildProperties.getLocal['openhub_client_secret'] | buildProperties.getPublic['openhub_client_secret']).string
        buildConfigField "String", "BUGLY_ID", (buildProperties.getLocal['bugly_appid'] | buildProperties.getPublic['bugly_appid']).string
        buildConfigField "String", "DEBUG_BUGLY_ID", (buildProperties.getLocal['debug_bugly_appid'] | buildProperties.getPublic['debug_bugly_appid']).string

        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    signingConfigs  {
        release {
            storeFile(file((buildProperties.getLocal['sign_path'] | buildProperties.getPublic['sign_path']).string))
            storePassword((buildProperties.getLocal['store_password'] | buildProperties.getPublic['store_password']).string)
            keyAlias((buildProperties.getLocal['key_alias'] | buildProperties.getPublic['key_alias']).string)
            keyPassword((buildProperties.getLocal['key_password'] | buildProperties.getPublic['key_password']).string)
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility Config.sourceCompatibilityVersion
        targetCompatibility Config.targetCompatibilityVersion
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

    flavorDimensions "default"

    productFlavors {
        normal {
            dimension "default"
            // add app_name int string.xml
            resValue "string", "app_name", "UUHub"
        }
        fullName {
            dimension "default"
            // add app_name int string.xml
            resValue "string", "app_name", "UUHub"
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [BUGLY_APP_CHANNEL_VALUE: name]
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(':lib-base')
    api project(':lib_githubsdk')

    testImplementation BuildDependencies.junit
    implementation AndroidX.appCompat
    implementation AndroidX.recyclerview
    implementation AndroidX.material
    implementation AndroidX.cardview
    implementation AndroidX.preference
    implementation AndroidX.constraintlayout
    implementation AndroidX.annotationX
    implementation AndroidX.browser

    implementation BuildDependencies.dataAutoAccess
    annotationProcessor BuildDependencies.dataAutoAccessCompiler

    implementation BuildDependencies.bufferknife
    annotationProcessor BuildDependencies.bufferknifeCompiler

    implementation BuildDependencies.greendao
    implementation BuildDependencies.eventbus

    implementation BuildDependencies.rxjava2
    implementation BuildDependencies.rxAndroid
    implementation BuildDependencies.retrofit
    implementation BuildDependencies.retrofitConverterGson
    implementation BuildDependencies.retrofitAdapterRxjava2
    implementation (BuildDependencies.retrofitConvertXml){
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    implementation BuildDependencies.loggingInterceptor

    implementation BuildDependencies.dagger
    annotationProcessor BuildDependencies.daggerCompiler

    implementation BuildDependencies.rxPermissions

    implementation BuildDependencies.glide
    annotationProcessor BuildDependencies.glideCompiler

    implementation BuildDependencies.circleImageView

    implementation BuildDependencies.toasty
    implementation BuildDependencies.aboutLibrary
    implementation BuildDependencies.submitButton

    implementation BuildDependencies.materialDialogCore
    implementation BuildDependencies.materialDialogCommon

    implementation BuildDependencies.richtext
    implementation BuildDependencies.glideImageGetter

    implementation BuildDependencies.logger
    implementation BuildDependencies.stickyHeaders

    implementation BuildDependencies.jsoup

}
